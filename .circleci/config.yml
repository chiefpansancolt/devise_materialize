version: 2

jobs:
  ruby_2_6:
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.6.3
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Run Test
          command: bundle exec rake test
          when: always

      # Collect Reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

  ruby_2_5:
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.5.5
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Run Test
          command: bundle exec rake test
          when: always

      # Collect Reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

  ruby_2_4:
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.4.6
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Run Test
          command: bundle exec rake test
          when: always

      # Collect Reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

  ruby_2_3:
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.3.7
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Run Test
          command: bundle exec rake test
          when: always

      # Collect Reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

  ruby_2_2:
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.2.10
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Run Test
          command: bundle exec rake test
          when: always

      # Collect Reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

  test:
    environment:
      CC_TEST_REPORTER_ID: 8554fdd454c086e46c9b99c39f068eeeed41522aeeab032ca155f2d0f827f16a
    working_directory: ~/devise_materialize
    docker:
      - image: circleci/ruby:2.6.3
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

    steps:
      - checkout

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Run Test Classes
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run Test
          command: |
            ./cc-test-reporter before-build
            bundle exec rake test
            ./cc-test-reporter after-build
          when: always

      # collect reports
      - store_artifacts:
          path: coverage
          destination: coverage

      - store_test_results:
          path: test/reports

workflows:
  version: 2
  ruby-versions-and-test:
    jobs:
      - ruby_2_6
      - ruby_2_5
      - ruby_2_4
      - ruby_2_3
      - ruby_2_2
      - test:
          requires:
            - ruby_2_6
            - ruby_2_5
            - ruby_2_4
            - ruby_2_3
            - ruby_2_2
